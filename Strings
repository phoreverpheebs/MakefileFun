#!/usr/bin/make -f

CHARACTERS = _ Z Y X W V U T S R \
			 Q P O N M L K J I H \
			 G F E D C B A z y x \
			 w v u t s r q p o n \
			 m l k j i h g f e d \
			 c b a 9 8 7 6 5 4 3 2 1 0

STR1 = 100101010010110010001010
STR2 = 100 101 001 011 001 000 100
STR3 = 100 101 001/011 001 000 101

# dir method of getting array without last element
all_but_last = $(strip $(subst /, ,$(dir /$(subst $() ,/,$(strip $1)))))

seperate_first = $(let t,$(filter-out $1,$(foreach s,$2,$(patsubst $s%,$s %,$\
				 $(lastword $1)))),$(if $t,$t,$1))
seperate = $(let t,$(call all_but_last,$1) $(call seperate_first,$(lastword $1),$2),$\
		   $(intcmp $(words $1),$(words $t),$(call seperate,$t,$2),$(strip $t)))

# a variant that errors:
all_but_last_err = $(if $(findstring /,$1),$(error string can't contain /),$(call all_but_last,$1))

# substituting / as _
all_but_last_sub = $(subst _,/,$(call all_but_last,$(subst /,_,$1)))

.PHONY: all
all:
ifeq ($(firstword $(MAKEFILE_LIST)),Strings)
	$(info $(call seperate,$(STR1),$(CHARACTERS)))

	$(info $(call all_but_last,$(STR2)))
	$(info $(call all_but_last_sub,$(STR3)))
	$(info $(call all_but_last_err,$(STR3)))
endif
