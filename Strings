#!/usr/bin/make -f

# Character Groups ><>

# blank is not included in characters, as it is a separator
DIGITS = 0 1 2 3 4 5 6 7 8 9

LOWERCASE_LETTERS = a b c d e f g h \
					i j k l m n o p \
					q r s t u v w x \
					y z

UPPERCASE_LETTERS = A B C D E F G H \
					I J K L M N O P \
					Q R S T U V W X \
					Y Z

HEXADECIMAL_DIGITS = $(DIGITS) $(wordlist 1,6,$(LOWERCASE_LETTERS))

LETTERS = $(LOWERCASE_LETTERS) $(UPPERCASE_LETTERS)

ALPHANUMERIC_CHARACTERS = $(DIGITS) $(LETTERS)

PUNCTUATION = ! " $# $$ % & ' ( ) * \
			  + , - . / : ; < = > ? \
			  @ [ \ ] ^ _ $` { | } ~

PRINTABLE_CHARACTERS = $(ALPHANUMERIC_CHARACTERS) $(PUNCTUATION)

BLANK = $() #
HORIZONTAL_TAB = $()	#
VERTICAL_TAB = $()#

define NEWLINE :=


endef

SPACE_CHARACTERS = $(BLANK) $(NEWLINE) $(HORIZONTAL_TAB) $(VERTICAL_TAB)

# <><

# dir method of getting array without last element
all_but_last = $(strip $(subst /, ,$(dir /$(subst $() ,/,$(strip $1)))))
separate_first = $(let t,$(filter-out $1,$(foreach s,$2,$(patsubst $s%,$s %,$\
				 $(lastword $1)))),$(if $t,$t,$1))
separate = $(let t,$(call all_but_last,$1) $(call separate_first,$(lastword $1),$2),$\
		   $(intcmp $(words $1),$(words $t),$(call separate,$t,$2),$(strip $t)))

# a variant that errors:
all_but_last_err = $(if $(findstring /,$1),$(error string can't contain /),$(call all_but_last,$1))

# substituting / as _
all_but_last_sub = $(subst _,/,$(call all_but_last,$(subst /,_,$1)))

# vim:foldmethod=marker:fmr=><>,<><
