#!/usr/bin/make -qrRf

NUMBERS = 0 1 2 3 4 5 6 7 8 9

popdel = $(strip $(subst /, ,$(dir /$(subst $() ,/,$(strip $1)))))
strsep_first = $(let t,$(filter-out $1,$(foreach s,$2,$\
			   $(patsubst $s%,$s %,$(lastword $1)))),$(if $t,$t,$1))
strsep = $(let t,$(call popdel,$1) $(call strsep_first,$(lastword $1),$2),$\
		 $(intcmp $(words $1),$(words $t),$(call strsep,$t,$2),$(strip $t)))

sepnums = $(call strsep,$1,$(NUMBERS))

# don't simply write 9 to allow for other bases
dec_recurse = $(call dec,$(call popdel,$t))$(lastword $(NUMBERS))

# $1 is the value to decrement and $2 is the handler of 0 (no arguments)
dec = $(let t,$(call sepnums,$1),$(intcmp $(words $t),1,,$(intcmp $t,$(word 1,$(NUMBERS)),,$(if $2,$(call $2),),$(word $1,$(NUMBERS))),$\
	  $(intcmp $(lastword $t),$(firstword $(NUMBERS)),,$(call dec_recurse,$t),$(subst $() ,,$(call popdel,$t))$(call dec,$(lastword $t)))))

inc_recurse = $(call inc,$(call popdel,$t))$(firstword $(NUMBERS))

inc = $(let t,$(call sepnums,$1),$(let nums,$(wordlist 3,$(words $(NUMBERS)),$(NUMBERS)),$(if $t,$(intcmp $(lastword $t),$(lastword $(NUMBERS)),$\
	  $(subst $() ,,$(call popdel,$t))$(intcmp $(lastword $t),$(firstword $(NUMBERS)),,$(word 2,$(NUMBERS)),$(word $(lastword $t),$(nums))),$(call inc_recurse,$t),),$(word 2,$(NUMBERS)))))

dec_zero_warning = $(warning attempt to decrement zero)

$(info decrement;)
$(info $(call dec,5))
$(info $(call dec,9))
$(info $(call dec,10429))
$(info $(call dec,28305420))
$(info $(call dec,100000000))
$(info $(call dec,5283050284))
$(info $(call dec,0,dec_zero_warning))

$(info increment;)
$(info $(call inc,0))
$(info $(call inc,7232))
$(info $(call inc,4123804))
$(info $(call inc,528305253509))
$(info $(call inc,9999999999999999))

.PHONY: all
all:
